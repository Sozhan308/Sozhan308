name: Update PR Contributions

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  pull_request:
    types: [closed]

permissions:
  contents: write
  pull-requests: read

jobs:
  update-contributions:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate PR List
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) {
                pullRequests(first:10, states:MERGED, orderBy:{field:CREATED_AT, direction:DESC}) {
                  nodes {
                    title
                    number
                    url
                    mergedAt
                    repository {
                      nameWithOwner
                    }
                  }
                }
              }
            }`;
            
            const result = await github.graphql(query, {
              owner: context.repo.owner,
              name: context.repo.repo
            });
            
            let readme = fs.readFileSync('README.md', 'utf8');
            
            // Generate PR list
            let prSection = '\n## ü§ù Recent PR Contributions\n\n';
            const prs = result.repository.pullRequests.nodes;
            prs.forEach(pr => {
              const date = new Date(pr.mergedAt).toISOString().split('T')[0];
              prSection += `- üîÑ Merged PR [#${pr.number}](${pr.url}) in \`${pr.repository.nameWithOwner}\` - ${pr.title} (${date})\n`;
            });
            
            // Find the position after Recent Activity section
            const activityMarker = '### ‚ú® My Recent Activity';
            const endActivityMarker = '<!--END_SECTION:activity-->';
            
            const activityIndex = readme.indexOf(activityMarker);
            const endActivityIndex = readme.indexOf(endActivityMarker);
            
            if (activityIndex !== -1 && endActivityIndex !== -1) {
              // Split the README content
              const beforeSection = readme.substring(0, endActivityIndex + endActivityMarker.length);
              const afterSection = readme.substring(endActivityIndex + endActivityMarker.length);
              
              // Remove existing PR contributions section if it exists
              const cleanedAfterSection = afterSection.replace(/\n## ü§ù Recent PR Contributions[\s\S]*?(?=\n##|$)/, '');
              
              // Combine the sections
              const updatedReadme = beforeSection + '\n\n' + prSection + cleanedAfterSection;
              fs.writeFileSync('README.md', updatedReadme);
            }

      - name: Commit and Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git commit -m "docs: update PR contributions" || exit 0
          git push