name: Update PR Contributions

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  pull_request:
    types: [closed]

permissions:
  contents: write
  pull-requests: read

jobs:
  update-contributions:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate PR List
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Modified query to fetch PRs across all repositories
            const query = `query($owner:String!) {
              user(login: $owner) {
                pullRequests(first: 10, orderBy: {field: CREATED_AT, direction: DESC}, states: [MERGED]) {
                  nodes {
                    title
                    number
                    url
                    mergedAt
                    repository {
                      nameWithOwner
                    }
                  }
                }
              }
            }`;
            
            try {
              const result = await github.graphql(query, {
                owner: context.repo.owner
              });
              
              console.log('Query result:', JSON.stringify(result, null, 2));
              
              let readme = fs.readFileSync('README.md', 'utf8');
              
              // Generate PR list with error handling
              let prSection = '\n## ü§ù Recent PR Contributions\n\n';
              const prs = result.user.pullRequests.nodes;
              
              if (prs && prs.length > 0) {
                prs.forEach(pr => {
                  const date = new Date(pr.mergedAt).toISOString().split('T')[0];
                  prSection += `- üîÑ Merged PR [#${pr.number}](${pr.url}) in \`${pr.repository.nameWithOwner}\` - ${pr.title} (${date})\n`;
                });
              } else {
                prSection += '- No merged PRs found in the last period\n';
              }
              
              // Find the position after Recent Activity section
              const activityMarker = '<!--END_SECTION:activity-->';
              const activityIndex = readme.indexOf(activityMarker);
              
              if (activityIndex !== -1) {
                // Split the README content
                const beforeSection = readme.substring(0, activityIndex + activityMarker.length);
                const afterSection = readme.substring(activityIndex + activityMarker.length);
                
                // Remove existing PR contributions section if it exists
                const cleanedAfterSection = afterSection.replace(/\n## ü§ù Recent PR Contributions[\s\S]*?(?=\n##|$)/, '');
                
                // Combine the sections with proper spacing
                const updatedReadme = beforeSection + '\n\n' + prSection + cleanedAfterSection;
                fs.writeFileSync('README.md', updatedReadme);
                
                console.log('README updated successfully');
              } else {
                console.log('Activity marker not found in README');
              }
            } catch (error) {
              console.error('Error occurred:', error);
              core.setFailed(error.message);
            }

      - name: Commit and Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git commit -m "docs: update PR contributions" || exit 0
          git push