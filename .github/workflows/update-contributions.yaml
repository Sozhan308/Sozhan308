name: Update Contribution List

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly
  workflow_dispatch:
  pull_request:
    types: [closed]

jobs:
  update-contributions:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate Contribution List
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) {
                pullRequests(first:100, states:MERGED, orderBy:{field:CREATED_AT, direction:DESC}) {
                  nodes {
                    title
                    number
                    url
                    mergedAt
                  }
                }
              }
            }`;
            
            const result = await github.graphql(query, {
              owner: context.repo.owner,
              name: context.repo.repo
            });
            
            // Read existing README
            let readme = fs.readFileSync('README.md', 'utf8');
            
            // Generate new contribution section
            let contributionSection = '\n## ü§ù Recent PR Contributions\n\n';
            
            const prs = result.repository.pullRequests.nodes;
            prs.slice(0, 10).forEach(pr => {  // Only show last 10 contributions
              const date = new Date(pr.mergedAt).toISOString().split('T')[0];
              contributionSection += `- [#${pr.number}](${pr.url}) - ${pr.title} (${date})\n`;
            });
            
            // Check if contributions section exists
            const contributionRegex = /## ü§ù Recent Contributions[\s\S]*?(?=##|$)/;
            
            if (contributionRegex.test(readme)) {
              // Update existing section
              readme = readme.replace(contributionRegex, contributionSection);
            } else {
              // Find the position to insert (before any GitHub stats sections)
              const statsRegex = /<!--[\s\S]*?START_SECTION:[\s\S]*?-->|<img.*?github-readme-stats.*?>/i;
              const statsMatch = readme.match(statsRegex);
              
              if (statsMatch) {
                // Insert before stats
                const position = statsMatch.index;
                readme = readme.slice(0, position) + contributionSection + '\n\n' + readme.slice(position);
              } else {
                // Append at the end
                readme += contributionSection;
              }
            }
            
            fs.writeFileSync('README.md', readme);

      - name: Commit and Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          git commit -m "docs: update recent contributions list" || exit 0
          git push